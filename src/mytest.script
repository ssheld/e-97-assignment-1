# create-ledger <name> description <description> seed <seed>
create-ledger test description "test ledger 2020" seed "harvard"

# create-account <account-id>
create-account mary
create-account bob
create-account bill
create-account frank
create-account jane
create-account bob
create-account jimbo

# get-account-balance <account-id>
# expect error since not committed to a block
get-account-balance mary

validate

#process-transaction <transaction-id> amount <amount> fee <fee> note <note> payer <account-address> receiver <account-address>
process-transaction 1 amount 1000 fee 10 note "fund account" payer master receiver mary
process-transaction 2 amount 1000 fee 10 note "fund account" payer master receiver bob
process-transaction 3 amount 1000 fee 10 note "fund account" payer master receiver bill
process-transaction 4 amount 1000 fee 10 note "fund account" payer master receiver frank
process-transaction 5 amount 1000 fee 10 note "fund account" payer master receiver mary

# error testing - invalid funds
process-transaction 6 amount 3000 fee 10 note "fund account" payer mary receiver master
# error testing - Account doesn't exist
process-transaction 6 amount 1000 fee 10 note "fund account" payer master receiver cat
process-transaction 6 amount 1000 fee 10 note "fund account" payer dog receiver mary
# error testing - Note exceeds limit (1025)
process-transaction 6 amount 1000 fee 10 note "FB942YdlF7swG85YfoH5rgqjcdaQ6FSssH22FEB3dmwIWHf9SB5gejx1Y6eMg64LYNGYqsSTdxdWrYTZ6HPRtPHOx84ipaN4qqrgIpZPDlyy2m567oyNsRkpijYXlu8WpvHmeaB8GqdIXntHfC9bkKdeCzDXHePHAyjSaTV6ryPMcCBf5blVmarajucNMW0nfGBb6h1kyVX6mNrBqQTQrY7alvupNFAEPp5iy8sW8o71SOhm6tEBIQvSJfRz6AsjF5ubJxPSPEA6OqzskaacElUnFAv1CY8bMqAyrzdUqGRmBY1xNZsBmnkKsIXcPgpSbIW02A0OjfbTEH61PKcmj4XyoXmDtavDLiwnwOQxaV1NzCtwgIeNLjLf8yJJvAYRx4u5xUhDzFJ8q4tm9ATzxPVuWFE7f9D7x1tgUquf7orGImGPIEp8mNRkMdOSzkuUI0HKl1vZprLu2XdHn5aHPWTaN4UzWiWOW152MJHyYHaniPyDNaodjGgiwMBxxIebnG3wh0aIdEkR65tHVCMK9R2EZFMoP44QVkJu9aQ7UONjyQrLEOubcoxJTdEzUcTui4F2yBJM8nb2CRJ3bbmyilb1sXhDvasyrtl2Cz3lVHvbRtUAUtSLzGdcFSBUAwru5uMCeh1L6gBXTfP0Adi7WmvTAt3W14I3CrOK0RzThJw9TItwJ23JZa2hWZpdgRl4KUP4GkYJPKj2jJuxbfTxcclmx4Dsz1whEggQwfdm4faMY9ysg9Rj6ODhrklylyLde0glbxMCOZ49TBwjGk7OqWxPbQRFYjG8pYf3L7H9RM76XTROzf0rZ54QppWS4VwVJmahNwV6N7ej1AP3E2FhYvowJp977KkECJI8XYkucEhSYvFuBPEHzoVPKd1MDS1hS5BrZpZRlkdTxFkoFQdeZJjLP8zepLkytnN2b66HXb6zhjqmZv9ALisrItZAPghsb1AS9gx8DW66bmsMCjZkLusjiJzvy4gON3w3kGuDubwZxxZMCOT9nVHvPSxC0dlkP" payer master receiver mary
# error testing - negative value for amount
process-transaction 6 amount -4 fee 10 note "fund account" payer master receiver mary











# expect error since the account mary has not been committed to a block
get-account-balance mary


# should not show any account balances since no block has been committed
get-account-balances

process-transaction 6 amount 1000 fee 10 note "fund account" payer master receiver bob
process-transaction 7 amount 1000 fee 10 note "fund account" payer master receiver bill
process-transaction 8 amount 1000 fee 10 note "fund account" payer master receiver frank
process-transaction 9 amount 1000 fee 10 note "fund account" payer master receiver mary
process-transaction 10 amount 1000 fee 10 note "fund account" payer master receiver bob

# expect balance of 3000 for mary
get-account-balance mary
# expect balance of 3000 for bob
get-account-balance bob
# expect balance of 2000 for bill
get-account-balance bill
# expect balance of 2000 for frank
get-account-balance frank
# expect balance of 0 for jane
get-account-balance jane

create-account bob


# show the details of block #1
get-block 1

#show the details of transaction 10
get-transaction 10

#show the details of transaction 10
get-transaction 11


process-transaction 11 amount 200 fee 10 note "september rent" payer frank receiver jane

create-account bob

# expect balance of 2000 for frank
get-account-balance frank
# expect balance of 0 for jane
get-account-balance jane

# test in order printing of hash values in merkle tree
in-order

create-account stacy
create-account jeremy

# Should print out all account balances
get-account-balances

validate